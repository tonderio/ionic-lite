import { ThreeDSHandler } from './3dsHandler';
import { Business, OrderItem, PaymentData } from '../types/commons-ds';
export type InlineCheckoutConstructor = {
    returnUrl: string;
    apiKey: string;
    successUrl?: string;
    renderPaymentButton: boolean;
    callBack?: (params: any) => void;
    styles?: any;
    form?: any;
    totalElement?: any;
};
export declare class InlineCheckout {
    #private;
    static injected: boolean;
    paymentData: {};
    items: never[];
    baseUrl: string;
    collectContainer: any;
    cartTotal?: string | null | number;
    apiKeyTonder?: string;
    returnUrl?: string;
    successUrl?: string;
    renderPaymentButton: boolean;
    callBack: (params: any) => void;
    customStyles: any;
    abortController: AbortController;
    process3ds: ThreeDSHandler;
    cb?: () => void;
    firstName?: string;
    lastName?: string;
    country?: string;
    address?: string;
    city?: string;
    state?: string;
    postCode?: string;
    email?: string;
    phone?: string;
    merchantData?: Business;
    cartItems?: any;
    injectInterval: any;
    constructor({ apiKey, returnUrl, successUrl, renderPaymentButton, callBack, styles, }: InlineCheckoutConstructor);
    payment(data: any): Promise<unknown>;
    setCartItems(items: OrderItem[]): void;
    setCustomerEmail(email: string): void;
    setPaymentData(data?: PaymentData): void;
    setCartTotal(total: string | number): void;
    setCallback(cb: any): void;
    injectCheckout(): void;
    getCustomer(email: string, signal: AbortSignal): Promise<any>;
    removeCheckout(): void;
}
